function Insurance(e,t,s){this.brand=e,this.year=t,this.type=s}function UserInterface(){}Insurance.prototype.calculateCost=function(){let e;switch(this.brand){case"1":e=2300;break;case"2":e=2100;break;case"3":e=2700}return e-=3*((new Date).getFullYear()-this.year)*e/100,"basico"===this.type?e*=1.3:"completo"===this.type&&(e*=1.5),e},UserInterface.prototype.fillOptions=()=>{const e=document.querySelector("#year"),t=(new Date).getFullYear(),s=t-20;for(let r=t;r>=s;r--){const t=document.createElement("option");t.value=r,t.textContent=r,e.appendChild(t)}},UserInterface.prototype.showMessages=(e,t)=>{const s=document.querySelector(".alert--"+t);if(s)return void(s.textContent=e);const r=document.createElement("div");"error"===t?r.classList.add("alert","alert--error"):r.classList.add("alert","alert--success"),r.classList.add("message"),r.textContent=e;document.querySelector("#quotation-results").appendChild(r),setTimeout(()=>{r.remove()},3e3)},UserInterface.prototype.showResults=(e,t)=>{const{brand:s,year:r,type:n}=e;switch(s){case"1":brandText="Americano";break;case"2":brandText="Asiático";break;case"3":brandText="Europeo"}switch(n){case"basic":typeText="Básico";break;case"complete":typeText="Completo"}const a=document.createElement("div");a.classList.add("result"),a.innerHTML=`\n    <h3 class="result__heading">Resultado de tu cotización</h3>\n    <ul class="result__list">\n      <li class="result__item"><span>Tipo de marca: </span> ${brandText}</li>\n      <li class="result__item"><span>Año de fabricación: </span> ${r}</li>\n      <li class="result__item"><span>Tipo de seguro: </span> ${typeText}</li>\n      <li class="result__item"><span>Total: </span> ${t}</li>\n    </ul>\n  `;const o=document.querySelector("#quotation-results"),c=document.querySelector("#loader");c.classList.add("loader--active"),setTimeout(()=>{for(c.classList.remove("loader--active");o.firstChild;)o.removeChild(o.firstChild);o.appendChild(a)},3e3)};const userInterface=new UserInterface;function startApp(){userInterface.fillOptions(),handleFormEvents()}function handleFormEvents(){document.querySelector("#quote-form").addEventListener("submit",quoteInsurance)}function quoteInsurance(e){e.preventDefault();const t=document.querySelector("#brand").value,s=document.querySelector("#year").value,r=document.querySelector('input[name="type"]:checked').value;if(""===t||""===s||""===r)return void userInterface.showMessages("Por favor, complete todos los campos","error");userInterface.showMessages("Cargando...","success");const n=document.querySelector("#quotation-results .result");null!=n&&n.remove();const a=new Insurance(t,s,r),o=a.calculateCost();userInterface.showResults(a,o)}document.addEventListener("DOMContentLoaded",startApp);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
