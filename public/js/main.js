function Insurance(e,t,s){this.brand=e,this.year=t,this.type=s}function UserInterface(){}Insurance.prototype.calculateCost=function(){let e;switch(this.brand){case"1":e=2300;break;case"2":e=2100;break;case"3":e=2700}return e-=3*((new Date).getFullYear()-this.year)*e/100,"basico"===this.type?e*=1.3:"completo"===this.type&&(e*=1.5),e},UserInterface.prototype.fillOptions=()=>{const e=document.querySelector("#year"),t=(new Date).getFullYear(),s=t-20;for(let n=t;n>=s;n--){const t=document.createElement("option");t.value=n,t.textContent=n,e.appendChild(t)}},UserInterface.prototype.showMessages=(e,t)=>{const s=document.querySelector(".alert--"+t);if(s)return void(s.textContent=e);const n=document.createElement("div");"error"===t?n.classList.add("alert","alert--error"):n.classList.add("alert","alert--success"),n.classList.add("message"),n.textContent=e;document.querySelector("#quotation-results").appendChild(n),setTimeout(()=>{n.remove()},3e3)},UserInterface.prototype.showResults=(e,t)=>{const{brand:s,year:n,type:r}=e;switch(s){case"1":brandText="Americano";break;case"2":brandText="Asiático";break;case"3":brandText="Europeo"}switch(r){case"basic":typeText="Básico";break;case"complete":typeText="Completo"}const a=document.createElement("div");a.classList.add("result"),a.innerHTML=`\n    <h3 class="result__heading">Resultado de tu cotización</h3>\n    <ul class="result__list">\n      <li class="result__item"><span>Tipo de marca: </span> ${brandText}</li>\n      <li class="result__item"><span>Año de fabricación: </span> ${n}</li>\n      <li class="result__item"><span>Tipo de seguro: </span> ${typeText}</li>\n      <li class="result__item"><span>Total: </span> ${t}</li>\n    </ul>\n  `;const o=document.querySelector("#loader");o.classList.add("loader--active"),setTimeout(()=>{const e=document.querySelector(".result");o.classList.remove("loader--active"),cleanHtml();document.querySelector("#quotation-results").appendChild(a),console.log(e)},3e3)};const userInterface=new UserInterface;function startApp(){userInterface.fillOptions(),handleFormEvents()}function handleFormEvents(){document.querySelector("#quote-form").addEventListener("submit",quoteInsurance)}function quoteInsurance(e){e.preventDefault(),cleanHtml();const t=document.querySelector("#brand").value,s=document.querySelector("#year").value,n=document.querySelector('input[name="type"]:checked').value;if(""===t||""===s||""===n)return void userInterface.showMessages("Por favor, complete todos los campos","error");userInterface.showMessages("Cargando...","success");const r=new Insurance(t,s,n),a=r.calculateCost();userInterface.showResults(r,a)}function cleanHtml(){document.querySelectorAll(".result").forEach(e=>{e.remove()})}document.addEventListener("DOMContentLoaded",startApp);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
