function Insurance(e,t,s){this.brand=e,this.year=t,this.type=s}function UserInterface(){}Insurance.prototype.calculateCost=function(){let e;switch(this.brand){case"1":e=2300;break;case"2":e=2100;break;case"3":e=2700}return e-=3*((new Date).getFullYear()-this.year)*e/100,"basic"===this.type?e*=1.3:"complete"===this.type&&(e*=1.5),e},UserInterface.prototype.fillOptions=()=>{const e=document.querySelector("#year"),t=(new Date).getFullYear(),s=t-20;for(let a=t;a>=s;a--){const t=document.createElement("option");t.value=a,t.textContent=a,e.appendChild(t)}},UserInterface.prototype.showMessages=(e,t)=>{const s=document.querySelector(".alert--"+t);if(s)return void(s.textContent=e);const a=document.createElement("div");"error"===t?a.classList.add("alert","alert--error"):a.classList.add("alert","alert--success"),a.classList.add("message"),a.textContent=e;document.querySelector("#quotation-results").appendChild(a),setTimeout(()=>{a.remove()},3e3)},UserInterface.prototype.showResults=(e,t)=>{const{brand:s,year:a,type:n}=e;switch(s){case"1":brandText="Americana";break;case"2":brandText="Asiática";break;case"3":brandText="Europea"}switch(n){case"basic":typeText="Básico";break;case"complete":typeText="Completo"}const r=document.createElement("div");r.classList.add("result"),r.innerHTML=`\n    <h3 class="result__heading">Resultado de tu cotización</h3>\n    <ul class="result__list">\n      <li class="result__item"><span>Tipo de marca: </span> ${brandText}</li>\n      <li class="result__item"><span>Año de fabricación: </span> ${a}</li>\n      <li class="result__item"><span>Tipo de seguro: </span> ${typeText}</li>\n      <li class="result__item"><span>Total: </span> ${t}</li>\n    </ul>\n  `;const c=document.querySelector("#loader");c.classList.add("loader--active"),setTimeout(()=>{c.classList.remove("loader--active"),cleanHtml();document.querySelector("#quotation-results").appendChild(r)},3e3)};const userInterface=new UserInterface;function startApp(){userInterface.fillOptions(),handleFormEvents()}function handleFormEvents(){document.querySelector("#quote-form").addEventListener("submit",quoteInsurance)}function quoteInsurance(e){e.preventDefault(),cleanHtml();const t=document.querySelector("#brand").value,s=document.querySelector("#year").value,a=document.querySelector('input[name="type"]:checked').value;if(""===t||""===s||""===a)return void userInterface.showMessages("Por favor, complete todos los campos","error");userInterface.showMessages("Cargando...","success");const n=new Insurance(t,s,a),r=n.calculateCost();userInterface.showResults(n,r)}function cleanHtml(){document.querySelectorAll(".result").forEach(e=>e.remove())}document.addEventListener("DOMContentLoaded",startApp);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
